<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/websocket
        http://www.springframework.org/schema/websocket/spring-websocket.xsd">

    <!-- Scan for components -->
    <context:component-scan base-package="com.filetransfer" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <!-- 排除手动创建的类 -->
        <context:exclude-filter type="assignable" expression="com.filetransfer.util.JwtUtil"/>
        <context:exclude-filter type="assignable" expression="com.filetransfer.filter.AuthenticationFilter"/>
        <context:exclude-filter type="assignable" expression="com.filetransfer.filter.CORSFilter"/>
    </context:component-scan>

    <!-- Enable Spring MVC annotations -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion" value="NON_NULL"/>
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg value="yyyy-MM-dd HH:mm:ss"/>
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="writeAcceptCharset" value="false"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- Static resources -->
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/resources/**" location="/resources/"/>
    <mvc:resources mapping="/uploads/**" location="file:${file.upload.directory}/"/>
    <mvc:resources mapping="/user-files/**" location="file:${file.user.files.directory}/"/>

    <!-- Default servlet handler for static content -->
    <mvc:default-servlet-handler/>

    <!-- Handler mapping explicitly for controllers -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="order" value="0"/>
    </bean>
    
    <!-- View resolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 配置MultipartResolver，用于文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 最大上传文件大小，设置为-1表示无限制 -->
        <property name="maxUploadSize" value="-1" />
        <!-- 内存中的最大值，超过此值将产生临时文件并存储到临时目录中 -->
        <property name="maxInMemorySize" value="40960" />
        <!-- 上传文件的临时目录 -->
        <property name="uploadTempDir" value="file:${java.io.tmpdir}/file-transfer-temp" />
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 延迟解析 -->
        <property name="resolveLazily" value="true" />
    </bean>

    <!-- WebSocket configuration -->
    <websocket:message-broker application-destination-prefix="/app">
        <websocket:stomp-endpoint path="/ws">
            <websocket:sockjs/>
        </websocket:stomp-endpoint>
        <websocket:simple-broker prefix="/topic"/>
    </websocket:message-broker>

    <!-- Properties configuration -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
            </list>
        </property>
    </bean>

    <!-- File service bean -->
    <bean id="fileService" class="com.filetransfer.service.FileServiceImpl">
        <property name="uploadDirectory" value="${file.upload.directory}"/>
    </bean>

    <!-- User service bean -->
    <bean id="userService" class="com.filetransfer.service.UserServiceImpl"/>

    <!-- 移除JWT utility bean的配置，由AuthenticationFilter直接创建 -->
    <!--
    <bean id="jwtUtil" class="com.filetransfer.util.JwtUtil">
        <property name="secret" value="${jwt.secret}"/>
        <property name="expiration" value="${jwt.expiration}"/>
    </bean>
    -->

    <!-- 移除AuthenticationFilter bean配置，由web.xml直接配置 -->
    <!--
    <bean id="authenticationFilter" class="com.filetransfer.filter.AuthenticationFilter">
        <property name="jwtUtil" ref="jwtUtil"/>
    </bean>
    -->

</beans>